void CMFCApplication1View::OnDraw(CDC* pDC)
{
	CMFCApplication1Doc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;

	// TODO: добавьте здесь код отрисовки для собственных данных
	int sx, sy, Xmax, Ymax;
	//  setting mapping mode
	pDC->SetMapMode(MM_TEXT);
	//
	Xmax = ::GetSystemMetrics(SM_CXSCREEN);
	Ymax = ::GetSystemMetrics(SM_CYSCREEN);
	//    
	sx = Xmax / 8, sy = Ymax / 11; // displace origin values 
//
	CString text("Hello Windows!");
	CString txt;
	pDC->SetViewportOrg(sx, sy); // maps to (0,0)

	pDC->TextOut(-20, -20, text);
	//  
	XUmax = Xmax / 2, YUmax = Ymax / 2;

	//  setting  the logical plotting area    
	pDC->Rectangle(0, 0, XUmax, YUmax);

	//

	//const int sz = 101;
	int i, x, y; 
	//
	//double PI = atan(1.0) * 4.0;
	//
	double X[sz], Y[sz], M[sz][sz], f[sz], x0 = 0.5, xN = 1, h;
	xmin = x0, xmax = xN, h = (xmax - xmin) / (sz - 1);
	initMatrix(h, M, X, f);
	Thomas(M, X, f, Y);
	ymax = Y[0], ymin = Y[0];
	for (i = 0; i < sz; ++i)
	{
		ymax = max(ymax, Y[i]);
		ymin = min(ymin, Y[i]);
	}
	hf = XUmax / (xmax - xmin), vf = YUmax / (ymax - ymin);


	// setting the physical plotting area    
	pDC->Rectangle(cx(xmin), cy(ymin), cx(xmax), cy(ymax));
	CPen RedPen(PS_SOLID, 1, RGB(255, 0, 0)); // red pen selected
	pDC->SelectObject(&RedPen);


	//  graph plot    
	for (i = 0; i < sz - 1; ++i)
	{
		pDC->MoveTo(cx(X[i]), cy(Y[i]));
		pDC->LineTo(cx(X[i + 1]), cy(Y[i + 1]));
	}
	CPen BluePen(PS_SOLID, 1, RGB(0, 0, 255));
	pDC->SelectObject(&BluePen); // blue pen selected 	  
// drawning axis of coordinates
	if (xmin <= 0.0)
	{
		// Y axis   
		pDC->MoveTo(cx(0.0), cy(ymin));
		pDC->LineTo(cx(0.0), cy(ymax));
		// X axis
		pDC->MoveTo(cx(xmin), cy(0.0));
		pDC->LineTo(cx(xmax), cy(0.0));
	}
	else
	{
		// Y axis not needed

		pDC->MoveTo(cx(xmin), cy(0.0));
		pDC->LineTo(cx(xmax), cy(0.0));
	}
	//numbers of coordinates
	for (i = 0; i <= 5; i++)
	{
		txt.Format(_T("%.6f"), Y[5 * i]);
		pDC->TextOut(-50, i * YUmax / 5, txt);
		txt.Format(_T("%.6f"), 0.5+i*0.1);
		pDC->TextOut(i * XUmax / 5,  YUmax + 50, txt);
	}
	CPen GreenPen(PS_SOLID, 1, RGB(205, 200 , 205));
	pDC->SelectObject(&GreenPen);
	for (i = 0; i <= 5; i++)
	{
		pDC->MoveTo(0, i * YUmax / 5);
		pDC->LineTo(XUmax, i * YUmax / 5);
		pDC->MoveTo(i * XUmax / 5, YUmax);
		pDC->LineTo(i * XUmax / 5, 0);
	}
}
